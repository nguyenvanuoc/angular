{"version":3,"sources":["../../../projects/commonLibrary/src/lib/blank.page.component/blank.page.component.html","../../../projects/commonLibrary/src/lib/blank.page.component/blank.page.component.ts","../../../projects/commonLibrary/src/lib/contex.action.bar/action.bar.component.html","../../../projects/commonLibrary/src/lib/contex.action.bar/action.bar.component.ts","../../../projects/commonLibrary/src/lib/contex.action.bar/action.item.component/action.item.component.html","../../../projects/commonLibrary/src/lib/contex.action.bar/action.item.component/action.item.component.ts","../../../projects/commonLibrary/src/lib/main.content.component/main.content.component.html","../../../projects/commonLibrary/src/lib/main.content.component/main.content.component.ts","../../../projects/commonLibrary/src/lib/drawer.content.component/drawer.content.component.html","../../../projects/commonLibrary/src/lib/drawer.content.component/drawer.content.component.ts","../../../projects/commonLibrary/src/lib/menu.pipes.ts","../../../projects/commonLibrary/src/lib/utilities.ts","../../../projects/commonLibrary/src/lib/assert.pipe.ts","../../../projects/commonLibrary/src/lib/menu.component/menu.component.html","../../../projects/commonLibrary/src/lib/menu.component/menu.component.ts","../../../projects/commonLibrary/src/lib/changedatetime.pipe.ts","../../../projects/commonLibrary/src/lib/toolbar.component/toolbar.item.component/toolbar.item.component.html","../../../projects/commonLibrary/src/lib/toolbar.component/toolbar.item.component/toolbar.item.component.ts","../../../projects/commonLibrary/src/lib/toolbar.component/toolbar.component.html","../../../projects/commonLibrary/src/lib/toolbar.component/toolbar.component.ts","../../../projects/commonLibrary/src/lib/bottombar/bottombar.component.ts","../../../projects/commonLibrary/src/lib/bottombar/bottombar.component.html","../../../projects/commonLibrary/src/lib/commonLibrary.module.ts","../../../projects/commonLibrary/src/lib/validator.ts"],"names":["i0","BlankPageComponent","this","close","title","prototype","ngOnInit","onCloseClick","window","history","back","selectors","inputs","ngContentSelectors","decls","vars","consts","template","rf","ctx","_r3","ContexualActionBarComponent","setTimeout","dispatchEvent","Event","ctx_r3","color","ctx_r6","ctx_r0","disabled","_r4","ctx_r7","ctx_r10","ctx_r2","_r8","left","right","fixAtTop","fixAtBottom","bgColor","_r1","ActionItemComponent","text","icon","iconSrc","MainContentComponent","DrawerContentComponent","ActiveUrlCheckPipe","transform","rootvalue","value","startsWith","pure","Utilities","assetUrl","url","publicPath","__webpack_public_path__","publicPathSuffix","endsWith","AssetUrlPipe","item_r7","iconfont","menu_r2","SubMenuComponent","router","_this","itemClick","EventEmitter","events","subscribe","data","NavigationEnd","activeRouter","toLowerCase","onClick","event","emit","i0__namespace","i1__namespace$2","Router","menuConfig","outputs","ChangeDateTimePipe","dateArray","exec","dataObject","Date","timenow","getFullYear","toLocaleDateString","getMonth","month","getDate","date","getHours","hour","getMinutes","minute","getSeconds","second","ctx_r1","ToolbarItemComponent","type","item_r17","ctx_r19","isCollapse","item_r25","ctx_r27","_c1$1","ToolbarComponent","sliceNum","onResize","screenSize","target","innerWidth","calculateScreen","tonggleCollapse","onItemClick","item","hostBindings","$event","BottombarComponent","position","CommonLibraryModule","forRoot","ngModule","providers","imports","CommonModule","VGridModule","VAffixModule","VButtonModule","VIconModule","VToolTipModule","VTypographyModule","VCardModule","VMenuModule","RouterModule","VDividerModule","VListModule","VLayoutModule","VDropDownModule","declarations","exports","MyValidator","DemoValidator","control","demoValid","trimError"],"mappings":"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","sourcesContent":["<button *ngIf=\"close\" vnpt-button vType=\"text\" (click)=\"onCloseClick()\" class=\"close-btn\">\r\n  <svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\"\r\n    y=\"0px\" viewBox=\"0 0 496.096 496.096\" style=\"enable-background: new 0 0 496.096 496.096; width: 12px\"\r\n    xml:space=\"preserve\">\r\n    <g>\r\n      <g>\r\n        <path d=\"M259.41,247.998L493.754,13.654c3.123-3.124,3.123-8.188,0-11.312c-3.124-3.123-8.188-3.123-11.312,0L248.098,236.686\r\n\t\t\tL13.754,2.342C10.576-0.727,5.512-0.639,2.442,2.539c-2.994,3.1-2.994,8.015,0,11.115l234.344,234.344L2.442,482.342\r\n\t\t\tc-3.178,3.07-3.266,8.134-0.196,11.312s8.134,3.266,11.312,0.196c0.067-0.064,0.132-0.13,0.196-0.196L248.098,259.31\r\n\t\t\tl234.344,234.344c3.178,3.07,8.242,2.982,11.312-0.196c2.995-3.1,2.995-8.016,0-11.116L259.41,247.998z\" />\r\n      </g>\r\n    </g>\r\n  </svg>\r\n</button>\r\n\r\n<ng-content> </ng-content>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'vnpt-page',\r\n  templateUrl: './blank.page.component.html',\r\n  styleUrls: ['./blank.page.component.css'],\r\n})\r\nexport class BlankPageComponent implements OnInit {\r\n  @Input() close: boolean = true;\r\n  title = 'emptypage';\r\n  ngOnInit() {}\r\n  onCloseClick() {\r\n    window.history.back();\r\n  }\r\n}\r\n","<vnpt-affix *ngIf=\"fixAtTop; else elseFixAtTop\" [vOffsetTop]=\"fixAtTop\">\r\n  <div vnpt-row class=\"context-actionbar-wrapper\" [ngStyle]=\"{'background-color':bgColor?bgColor:''}\">\r\n    <div vnpt-col vXs=\"14\" vSm=\"14\" vMd=\"14\" vLg=\"18\" vXl=\"18\" class=\"actionbar-left\">\r\n      <ng-container *ngTemplateOutlet=\"left\"></ng-container>\r\n    </div>\r\n    <div vnpt-col vXs=\"10\" vSm=\"10\" vMd=\"10\" vLg=\"6\" vXl=\"6\" style=\"text-align: right\" class=\"actionbar-right\">\r\n      <ng-container *ngTemplateOutlet=\"right\"></ng-container>\r\n    </div>\r\n  </div>\r\n</vnpt-affix>\r\n<ng-template #elseFixAtTop>\r\n  <vnpt-affix *ngIf=\"fixAtBottom; else default\" [vOffsetBottom]=\"fixAtBottom\">\r\n    <div vnpt-row class=\"context-actionbar-wrapper\">\r\n      <div vnpt-col vXs=\"14\" vSm=\"14\" vMd=\"14\" vLg=\"18\" vXl=\"18\" class=\"actionbar-left\">\r\n        <ng-container *ngTemplateOutlet=\"left\"></ng-container>\r\n      </div>\r\n      <div vnpt-col vXs=\"10\" vSm=\"10\" vMd=\"10\" vLg=\"6\" vXl=\"6\" style=\"text-align: right\" class=\"actionbar-right\">\r\n        <ng-container *ngTemplateOutlet=\"right\"></ng-container>\r\n      </div>\r\n    </div>\r\n  </vnpt-affix>\r\n</ng-template>\r\n\r\n<ng-template #default>\r\n  <vnpt-affix [vOffsetTop]=\"85\">\r\n    <div vnpt-row class=\"context-actionbar-wrapper\">\r\n      <div vnpt-col vXs=\"14\" vSm=\"14\" vMd=\"14\" vLg=\"18\" vXl=\"18\" class=\"actionbar-left\">\r\n        <ng-container *ngTemplateOutlet=\"left\"></ng-container>\r\n      </div>\r\n      <div vnpt-col vXs=\"10\" vSm=\"10\" vMd=\"10\" vLg=\"6\" vXl=\"6\" style=\"text-align: right\" class=\"actionbar-right\">\r\n        <ng-container *ngTemplateOutlet=\"right\"></ng-container>\r\n      </div>\r\n    </div>\r\n  </vnpt-affix>\r\n</ng-template>\r\n","import { Component, Input, OnInit, TemplateRef } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'contexual-actionbar',\r\n  templateUrl: './action.bar.component.html',\r\n  styleUrls: ['./action.bar.component.css'],\r\n})\r\nexport class ContexualActionBarComponent implements OnInit {\r\n  @Input() left: TemplateRef<void>;\r\n  @Input() right: TemplateRef<void>;\r\n  @Input() fixAtTop: number;\r\n  @Input() fixAtBottom: number;\r\n  @Input() bgColor: string;\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      window.dispatchEvent(new Event('resize'));\r\n    }, 300);\r\n  }\r\n\r\n  close(): void {}\r\n}\r\n","<button *ngIf=\"text; else notext\" vnpt-button vType=\"text\" vnpt-tooltip [vTooltipTitle]=\"title\" [disabled]=\"disabled\"\r\n  class=\"action-item-btn\">\r\n  <i *ngIf=\"iconSrc; else elseSrc\" vnpt-icon [vSrc]=\"iconSrc\" [vColor]=\"color\"></i>\r\n  <ng-template #elseSrc>\r\n    <i *ngIf=\"icon\" vnpt-icon [vType]=\"icon\" [vColor]=\"color\"></i>\r\n  </ng-template>\r\n  <span>{{ text }}</span>\r\n</button>\r\n<ng-template #notext>\r\n  <button vnpt-button vType=\"text\" vnpt-tooltip [vTooltipTitle]=\"title\" [disabled]=\"disabled\" class=\"action-item-btn\">\r\n    <i *ngIf=\"iconSrc; else elseSrc\" vnpt-icon [vSrc]=\"iconSrc\" [vColor]=\"color\"></i>\r\n    <ng-template #elseSrc>\r\n      <i *ngIf=\"icon\" vnpt-icon [vType]=\"icon\" [vColor]=\"color\"></i>\r\n    </ng-template>\r\n  </button>\r\n</ng-template>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'action-item',\r\n  templateUrl: './action.item.component.html',\r\n  styleUrls: ['./action.item.component.css'],\r\n})\r\nexport class ActionItemComponent implements OnInit {\r\n  @Input() text: string;\r\n  @Input() icon: string;\r\n  @Input() iconSrc: string;\r\n  @Input() color: string = 'primary';\r\n  @Input() title: string;\r\n  @Input() disabled: boolean = false;\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {}\r\n\r\n  close(): void {}\r\n}\r\n","<div class=\"layout-wr\">\r\n  <vnpt-card [vBordered]=\"false\">\r\n    <h4 *ngIf=\"title\" vnpt-typography class=\"mb-4 mb-md-6\">{{ title }}</h4>\r\n    <ng-content> </ng-content>\r\n  </vnpt-card>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'vnpt-main-content',\r\n  templateUrl: './main.content.component.html',\r\n  styleUrls: ['./main.content.component.css'],\r\n})\r\nexport class MainContentComponent implements OnInit {\r\n  @Input() title: string;\r\n\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"drawer-content-wrapper\">\r\n  <h4 *ngIf=\"title\" vnpt-typography class=\"page-title\">{{ title }}</h4>\r\n  <ng-content> </ng-content>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'vnpt-main-drawer',\r\n  templateUrl: './drawer.content.component.html',\r\n  styleUrls: ['./drawer.content.component.css'],\r\n})\r\nexport class DrawerContentComponent implements OnInit {\r\n  @Input() title: string;\r\n\r\n  ngOnInit() {}\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({ name: 'activeUrlCheck' })\r\nexport class ActiveUrlCheckPipe implements PipeTransform {\r\n  transform(rootvalue: string, value: string): boolean {\r\n    if (rootvalue) {\r\n      if (rootvalue.startsWith(value)) {\r\n        if (value === '/home' && rootvalue != '/home') return false;\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n","export class Utilities {\r\n  static assetUrl(url: string): string {\r\n    // @ts-ignore\r\n    const publicPath = __webpack_public_path__;\r\n    const publicPathSuffix = publicPath.endsWith('/') ? '' : '/';\r\n    const urlPrefix = url.startsWith('/') ? '' : '/';\r\n\r\n    return `${publicPath}${publicPathSuffix}assets${urlPrefix}${url}`;\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Utilities } from './utilities';\r\n\r\n@Pipe({ name: 'assetUrl' })\r\nexport class AssetUrlPipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    return Utilities.assetUrl(value);\r\n  }\r\n}\r\n","<ul *ngIf=\"menuConfig && menuConfig.length>0\" vnpt-menu vMode=\"inline\" style=\"padding: 10px 2px 20px 20px;\">\r\n  <ng-container *ngFor=\"let menu of menuConfig; let i = index\">\r\n    <li *ngIf=\"menu.childs && menu.childs.length > 0\" vnpt-submenu [vTitle]=\"menu.title\"\r\n      [vIcon]=\"menu.iconfont?menu.icon:''\" vOpen>\r\n      <ul>\r\n        <ng-container *ngFor=\"let item of menu.childs; let j = index\">\r\n          <li *ngIf=\"item.routerLink\" vnpt-menu-item routerLink=\"{{item.routerLink}}\" title=\"{{item.title}}\"\r\n            [vSelected]=\"activeRouter|activeUrlCheck:item.routerLink\" (click)=\"onClick(item)\"><i *ngIf=\"item.icon\" vnpt-icon\r\n              [vSrc]=\"item.iconfont? '':(item.icon | assetUrl)\" [vType]=\"item.iconfont? item.icon:''\"\r\n              [vSize]=\"'xs'\"></i>{{item.title}}</li>\r\n          <li *ngIf=\"item.vRouterLink\" vnpt-menu-item vRouterLink=\"{{item.vRouterLink}}\" title=\"{{item.title}}\"\r\n            [vSelected]=\"activeRouter|activeUrlCheck:item.routerLink\" (click)=\"onClick(item)\"><i *ngIf=\"item.icon\" vnpt-icon\r\n              [vSrc]=\"item.iconfont? '':(item.icon | assetUrl)\" [vType]=\"item.iconfont? item.icon:''\"\r\n              [vSize]=\"'xs'\"></i>{{item.title}}</li>\r\n          <li *ngIf=\"item.href\" vnpt-menu-item [vSelected]=\"activeRouter|activeUrlCheck:item.routerLink\"><a\r\n              href=\"{{item.href}}\" title=\"{{item.title}}\" target=\"_blank\"><i *ngIf=\"item.icon\" vnpt-icon\r\n                [vSrc]=\"item.iconfont? '':(item.icon | assetUrl)\" [vType]=\"item.iconfont? item.icon:''\"\r\n                [vSize]=\"'xs'\"></i>{{item.title}}</a></li>\r\n        </ng-container>\r\n      </ul>\r\n    </li>\r\n\r\n    <ng-container *ngIf=\"!menuConfig || menuConfig.length<=0\">\r\n      <li *ngIf=\"menu.routerLink\" vnpt-menu-item routerLink=\"{{menu.routerLink}}\" title=\"{{menu.title}}\"\r\n        [vSelected]=\"activeRouter|activeUrlCheck:item.routerLink\" (click)=\"onClick(menu)\"><i *ngIf=\"menu.icon\" vnpt-icon\r\n          [vSrc]=\"menu.iconfont? '':(menu.icon | assetUrl)\" [vType]=\"menu.iconfont? menu.icon:''\"\r\n          [vSize]=\"'xs'\"></i>{{menu.title}}</li>\r\n      <li *ngIf=\"menu.vRouterLink\" vnpt-menu-item vRouterLink=\"{{menu.vRouterLink}}\" title=\"{{menu.title}}\"\r\n        [vSelected]=\"activeRouter|activeUrlCheck:item.routerLink\" (click)=\"onClick(menu)\"><i *ngIf=\"menu.icon\" vnpt-icon\r\n          [vSrc]=\"menu.iconfont? '':(menu.icon | assetUrl)\" [vType]=\"menu.iconfont? menu.icon:''\"\r\n          [vSize]=\"'xs'\"></i>{{menu.title}}</li>\r\n      <li *ngIf=\"menu.href\" vnpt-menu-item [vSelected]=\"activeRouter|activeUrlCheck:item.routerLink\"><a\r\n          href=\"{{menu.href}}\" title=\"{{menu.title}}\" target=\"_blank\"><i *ngIf=\"menu.icon\" vnpt-icon\r\n            [vSrc]=\"menu.iconfont? '':(menu.icon | assetUrl)\" [vType]=\"menu.iconfont? menu.icon:''\"\r\n            [vSize]=\"'xs'\"></i>{{menu.title}}</a></li>\r\n    </ng-container>\r\n  </ng-container>\r\n</ul>\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { NavigationEnd, Router } from '@angular/router';\r\nimport { SubMenuModel } from '../models/menu.model';\r\nimport { Utilities } from '../utilities';\r\n\r\n@Component({\r\n  selector: 'submenu-comp',\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.css'],\r\n})\r\nexport class SubMenuComponent implements OnInit {\r\n  @Input() menuConfig: SubMenuModel[];\r\n\r\n  @Output() itemClick = new EventEmitter<SubMenuModel>();\r\n\r\n  activeRouter: string;\r\n\r\n  constructor(private router: Router) {\r\n    this.router.events.subscribe((data) => {\r\n      if (data instanceof NavigationEnd) {\r\n        this.activeRouter = data.url.toLowerCase();\r\n      }\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  onClick(event: SubMenuModel) {\r\n    this.itemClick.emit(event);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n@Pipe({ name: 'changeDateTime' })\r\nexport class ChangeDateTimePipe implements PipeTransform {\r\n  transform(value: string): string {\r\n    let reggie = /(\\d{4})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})/;\r\n    let dateArray = reggie.exec(value);\r\n    let dataObject = new Date(\r\n      +dateArray[1],\r\n      +dateArray[2] - 1,\r\n      +dateArray[3],\r\n      +dateArray[4],\r\n      +dateArray[5],\r\n      +dateArray[6]\r\n    );\r\n    let timenow = new Date();\r\n    let date;\r\n    let month;\r\n    let hour;\r\n    let minute;\r\n    let second;\r\n    if (dataObject.getFullYear() < timenow.getFullYear()) {\r\n      return dataObject.toLocaleDateString();\r\n    } else if (dataObject.getFullYear() == timenow.getFullYear()) {\r\n      if (dataObject.getMonth() < timenow.getMonth()) {\r\n        month = timenow.getMonth() - dataObject.getMonth();\r\n        return month + ' ' + 'tháng trước';\r\n      } else if (dataObject.getMonth() == timenow.getMonth()) {\r\n        if (dataObject.getDate() < timenow.getDate()) {\r\n          date = timenow.getDate() - dataObject.getDate();\r\n          return date + ' ' + 'ngày trước';\r\n        } else if (dataObject.getDate() == timenow.getDate()) {\r\n          if (dataObject.getHours() < timenow.getHours()) {\r\n            hour = timenow.getHours() - dataObject.getHours();\r\n            return hour + ' ' + 'giờ trước';\r\n          } else if (dataObject.getHours() == timenow.getHours()) {\r\n            if (dataObject.getMinutes() < timenow.getMinutes()) {\r\n              minute = timenow.getMinutes() - dataObject.getMinutes();\r\n              return minute + ' ' + 'phút trước';\r\n            } else if (dataObject.getMinutes() == timenow.getMinutes()) {\r\n              if (dataObject.getSeconds() < timenow.getSeconds()) {\r\n                second = timenow.getSeconds() - dataObject.getSeconds();\r\n                return second + ' ' + 'giây trước';\r\n              } else if (dataObject.getSeconds() == timenow.getSeconds()) {\r\n                return 'less than a minute';\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","<button *ngIf=\"type==='lg'\" vnpt-button vType=\"text\" class=\"toolbar-btn\" title=\"{{title}}\"><i vnpt-icon [vSrc]=\"iconfont? '': (icon | assetUrl)\" [vType]=\"iconfont?icon:''\" [vSize]=\"'lg'\"></i><span>{{title}}</span></button>\r\n<button *ngIf=\"type==='md'\" vnpt-button vType=\"text\" class=\"toolbar-btn\" title=\"{{title}}\"><i vnpt-icon [vSrc]=\"iconfont? '': (icon | assetUrl)\" [vType]=\"iconfont?icon:''\"></i><span>{{title}}</span></button>\r\n<button *ngIf=\"type==='sm'\" vnpt-button vType=\"text\" class=\"toolbar-btn-sm\" title=\"{{title}}\"><i vnpt-icon [vSrc]=\"iconfont? '': (icon | assetUrl)\" [vType]=\"iconfont?icon:''\" [vSize]=\"'xs'\"></i><span>{{title}}</span></button>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'toolbar-item',\r\n  templateUrl: './toolbar.item.component.html',\r\n  styleUrls: ['./toolbar.item.component.css'],\r\n})\r\nexport class ToolbarItemComponent implements OnInit {\r\n  @Input() type: string = 'md';\r\n  @Input() title: string;\r\n  @Input() icon: string;\r\n  @Input() iconfont: boolean;\r\n\r\n  ngOnInit() {}\r\n}\r\n","<vnpt-affix *ngIf=\"fixAtTop; else elseFixAtTop\" [vOffsetTop]=\"fixAtTop\">\r\n  <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n</vnpt-affix>\r\n<ng-template #elseFixAtTop>\r\n  <vnpt-affix *ngIf=\"fixAtBottom; else default\" [vOffsetBottom]=\"fixAtBottom\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </vnpt-affix>\r\n</ng-template>\r\n\r\n<ng-template #default>\r\n  <vnpt-affix [vOffsetTop]=\"85\">\r\n    <ng-container *ngTemplateOutlet=\"content\"></ng-container>\r\n  </vnpt-affix>\r\n</ng-template>\r\n\r\n<ng-template #content>\r\n  <div vnpt-row [ngClass]=\"{'toolbar-wrapper':true,'collapse':isCollapse}\" [ngStyle]=\"{'background-color':bgColor?bgColor:''}\">\r\n    <div vnpt-col [vSpan]=\"24\">\r\n      <ng-container *ngFor=\"let item of config.slice(0, sliceNum); let i = index\">\r\n        <toolbar-item *ngIf=\"item.title || item.icon\" [title]=\"item.title\" [icon]=\"item.icon\" [iconfont]=\"item.iconfont\" [type]=\"isCollapse?'sm':'md'\" (click)=\"onItemClick(item)\"></toolbar-item>\r\n        <vnpt-divider *ngIf=\"!item.title && !item.icon && screenSize>992\" vType=\"vertical\"></vnpt-divider>\r\n      </ng-container>\r\n      <ng-content></ng-content>\r\n      <button *ngIf=\"config.length > sliceNum\" vnpt-button vType=\"text\" class=\"toolbar-more-btn\" vnpt-dropdown [vDropdownMenu]=\"more\"><i vnpt-icon [vType]=\"'BulletedListBullet'\" [vSize]=\"'md'\"></i></button>\r\n      <vnpt-dropdown-menu  #more=\"vDropdownMenu\">\r\n        <ul vnpt-menu vSelectable>\r\n          <li *ngFor=\"let item of config.slice(sliceNum, config.length); let i = index\" vnpt-menu-item style=\"text-align: center;\">\r\n            <toolbar-item *ngIf=\"item.title || item.icon\" [title]=\"item.title\" [icon]=\"item.icon\" [iconfont]=\"item.iconfont\" [type]=\"isCollapse?'sm':'md'\" (click)=\"onItemClick(item)\"></toolbar-item>\r\n          </li>\r\n        </ul>\r\n      </vnpt-dropdown-menu>\r\n\r\n      <button *ngIf=\"!isCollapse\" vnpt-button vType=\"text\" class=\"toolbar-btn-collapse\" title=\"Thu gọn\" (click)=\"tonggleCollapse();\"><i vnpt-icon vType=\"ChevronUp\" [vSize]=\"'xs'\" [vColor]=\"'primary'\"></i></button>\r\n      <button *ngIf=\"isCollapse\" vnpt-button vType=\"text\" class=\"toolbar-btn-collapse\" title=\"Mở rộng\" (click)=\"tonggleCollapse();\"><i vnpt-icon vType=\"ChevronDown\" [vSize]=\"'xs'\" [vColor]=\"'primary'\"></i></button>\r\n    </div>\r\n  </div>\r\n</ng-template>\r\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  HostListener,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n} from '@angular/core';\r\nimport { SubMenuModel } from '../models/menu.model';\r\n\r\n@Component({\r\n  selector: 'app-toolbar',\r\n  templateUrl: './toolbar.component.html',\r\n  styleUrls: ['./toolbar.component.css'],\r\n})\r\nexport class ToolbarComponent implements OnInit {\r\n  @Input() config: SubMenuModel[];\r\n  @Input() fixAtTop: number;\r\n  @Input() fixAtBottom: number;\r\n  @Input() bgColor: string;\r\n  @Input() isCollapse: boolean = false;\r\n\r\n  screenSize: number;\r\n  sliceNum: number = 15;\r\n\r\n  @Output() itemClick = new EventEmitter<SubMenuModel>();\r\n\r\n  @HostListener('window:resize', ['$event'])\r\n  onResize(event) {\r\n    this.screenSize = event.target.innerWidth;\r\n    this.calculateScreen();\r\n  }\r\n\r\n  ngOnInit() {\r\n    setTimeout(() => {\r\n      window.dispatchEvent(new Event('resize'));\r\n    }, 300);\r\n  }\r\n\r\n  calculateScreen() {\r\n    if (this.screenSize >= 1200) this.sliceNum = 15;\r\n    else if (this.screenSize >= 992) this.sliceNum = 9;\r\n    else if (this.screenSize >= 768) this.sliceNum = 6;\r\n    else if (this.screenSize >= 425) this.sliceNum = 3;\r\n    else this.sliceNum = 2;\r\n  }\r\n\r\n  tonggleCollapse() {\r\n    this.isCollapse = !this.isCollapse;\r\n  }\r\n\r\n  onItemClick(item: SubMenuModel) {\r\n    this.itemClick.emit(item);\r\n  }\r\n}\r\n","import { Component, Input, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'bottom-bar',\r\n  templateUrl: './bottombar.component.html',\r\n  styleUrls: ['./bottombar.component.css'],\r\n})\r\nexport class BottombarComponent implements OnInit {\r\n  @Input() position: number = 0;\r\n  @Input() bgColor: string = '#fff';\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit(): void {\r\n    setTimeout(() => {\r\n      window.dispatchEvent(new Event('resize'));\r\n    }, 300);\r\n  }\r\n}\r\n","<vnpt-affix [vOffsetBottom]=\"position\">\r\n  <div vnpt-row class=\"fixed-bottom-bar\" [ngStyle]=\"{'background-color':bgColor}\">\r\n    <div vnpt-col vSpan=\"24\">\r\n      <ng-content></ng-content>\r\n    </div>\r\n  </div>\r\n\r\n</vnpt-affix>\r\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { VAffixModule } from '@vnpt/oneui-ui/affix';\r\nimport { VButtonModule } from '@vnpt/oneui-ui/button';\r\nimport { VIconModule } from '@vnpt/oneui-ui/icon';\r\nimport { VLayoutModule } from '@vnpt/oneui-ui/layout';\r\nimport { BlankPageComponent } from './blank.page.component/blank.page.component';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { ContexualActionBarComponent } from './contex.action.bar/action.bar.component';\r\nimport { ActionItemComponent } from './contex.action.bar/action.item.component/action.item.component';\r\nimport { VGridModule } from '@vnpt/oneui-ui/grid';\r\nimport { VToolTipModule } from '@vnpt/oneui-ui/tooltip';\r\nimport { MainContentComponent } from './main.content.component/main.content.component';\r\nimport { VTypographyModule } from '@vnpt/oneui-ui/typography';\r\nimport { DrawerContentComponent } from './drawer.content.component/drawer.content.component';\r\nimport { VCardModule } from '@vnpt/oneui-ui/card';\r\nimport { ActiveUrlCheckPipe } from './menu.pipes';\r\nimport { VMenuModule } from '@vnpt/oneui-ui/menu';\r\nimport { SubMenuComponent } from './menu.component/menu.component';\r\nimport { AssetUrlPipe } from './assert.pipe';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ChangeDateTimePipe } from './changedatetime.pipe';\r\nimport { VDividerModule } from '@vnpt/oneui-ui/divider';\r\nimport { VListModule } from '@vnpt/oneui-ui/list';\r\nimport { ToolbarComponent } from './toolbar.component/toolbar.component';\r\nimport { ToolbarItemComponent } from './toolbar.component/toolbar.item.component/toolbar.item.component';\r\nimport { VDropDownModule } from '@vnpt/oneui-ui/dropdown';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BottombarComponent } from './bottombar/bottombar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BlankPageComponent,\r\n    ContexualActionBarComponent,\r\n    ActionItemComponent,\r\n    MainContentComponent,\r\n    DrawerContentComponent,\r\n    ActiveUrlCheckPipe,\r\n    SubMenuComponent,\r\n    AssetUrlPipe,\r\n    ChangeDateTimePipe,\r\n    ToolbarComponent,\r\n    ToolbarItemComponent,\r\n    BottombarComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    VGridModule,\r\n    VAffixModule,\r\n    VButtonModule,\r\n    VIconModule,\r\n    VToolTipModule,\r\n    VTypographyModule,\r\n    VCardModule,\r\n    VMenuModule,\r\n    RouterModule,\r\n    VDividerModule,\r\n    VListModule,\r\n    VLayoutModule,\r\n    VDropDownModule,\r\n  ],\r\n  exports: [\r\n    BlankPageComponent,\r\n    ContexualActionBarComponent,\r\n    ActionItemComponent,\r\n    MainContentComponent,\r\n    DrawerContentComponent,\r\n    ActiveUrlCheckPipe,\r\n    SubMenuComponent,\r\n    AssetUrlPipe,\r\n    ChangeDateTimePipe,\r\n    ToolbarComponent,\r\n    ToolbarItemComponent,\r\n    BottombarComponent,\r\n  ],\r\n  providers: [\r\n  ],\r\n})\r\nexport class CommonLibraryModule {\r\n  public static forRoot(): ModuleWithProviders<CommonLibraryModule> {\r\n    return {\r\n      ngModule: CommonLibraryModule\r\n    };\r\n  }\r\n}\r\n","import { AbstractControl, ValidationErrors } from '@angular/forms';\r\n\r\nexport class MyValidator {\r\n  static DemoValidator(control: AbstractControl): ValidationErrors | null {\r\n    return demoValid(control);\r\n  }\r\n}\r\n\r\nexport function demoValid(control: AbstractControl): ValidationErrors | null {\r\n  if (control.value != null && control.value.startsWith(' ')) {\r\n    return {\r\n      trimError: { value: 'control has leading whitespace' },\r\n    };\r\n  }\r\n  if (control.value != null && control.value.endsWith(' ')) {\r\n    return {\r\n      trimError: { value: 'control has trailing whitespace' },\r\n    };\r\n  }\r\n  return null;\r\n}\r\n"]}